# Generated by Django 5.2.3 on 2025-06-13 16:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='グループ名')),
                ('description', models.TextField(blank=True, verbose_name='説明')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'グループ',
                'verbose_name_plural': 'グループ',
            },
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase_number', models.IntegerField(choices=[(1, 'Phase 1: フロントエンド基礎1'), (2, 'Phase 2: フロントエンド基礎2'), (3, 'Phase 3: フロントエンド実践'), (4, 'Phase 4: サーバーサイド基礎1'), (5, 'Phase 5: サーバーサイド基礎2'), (6, 'Phase 6: サーバーサイド実践'), (7, 'Phase 7: WEBシステム自作')], unique=True, verbose_name='Phase番号')),
                ('name', models.CharField(max_length=100, verbose_name='Phase名')),
                ('description', models.TextField(blank=True, verbose_name='説明')),
                ('total_days', models.IntegerField(verbose_name='標準日数')),
                ('start_day', models.IntegerField(verbose_name='開始日（カリキュラム全体の何日目）')),
                ('end_day', models.IntegerField(verbose_name='終了日（カリキュラム全体の何日目）')),
            ],
            options={
                'verbose_name': 'Phase',
                'verbose_name_plural': 'Phase',
                'ordering': ['phase_number'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('student', '研修生'), ('admin', '管理者')], default='student', max_length=10)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='研修開始日')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='progress.group')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CurriculumItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(max_length=10, verbose_name='項目コード')),
                ('name', models.CharField(max_length=200, verbose_name='項目名')),
                ('estimated_hours', models.DecimalField(decimal_places=1, max_digits=5, verbose_name='標準時間')),
                ('estimated_days', models.IntegerField(blank=True, null=True, verbose_name='標準日数')),
                ('order', models.IntegerField(verbose_name='順序')),
                ('description', models.TextField(blank=True, verbose_name='説明')),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='progress.phase')),
            ],
            options={
                'verbose_name': 'カリキュラム項目',
                'verbose_name_plural': 'カリキュラム項目',
                'ordering': ['phase__phase_number', 'order'],
                'unique_together': {('phase', 'item_code')},
            },
        ),
        migrations.CreateModel(
            name='UserStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_study_hours', models.DecimalField(decimal_places=1, default=0, max_digits=7, verbose_name='累計学習時間')),
                ('current_grade', models.CharField(choices=[('S', 'S級 (120日以内)'), ('A', 'A級 (150日以内)'), ('B', 'B級 (180日以内)'), ('C', 'C級 (210日以内)'), ('D', 'D級 (210日超過)')], default='A', max_length=1, verbose_name='現在の階級')),
                ('days_elapsed', models.IntegerField(default=0, verbose_name='経過日数')),
                ('delay_days', models.IntegerField(default=0, verbose_name='遅れ日数')),
                ('stars', models.IntegerField(default=0, verbose_name='星の数')),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='完了率')),
                ('estimated_completion_date', models.DateField(blank=True, null=True, verbose_name='完了見込み日')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('current_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='progress.curriculumitem', verbose_name='現在の項目')),
                ('current_phase', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='progress.phase', verbose_name='現在のPhase')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ユーザー統計',
                'verbose_name_plural': 'ユーザー統計',
            },
        ),
        migrations.CreateModel(
            name='DailyProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='記録日')),
                ('progress_detail', models.TextField(blank=True, max_length=100, verbose_name='進捗詳細')),
                ('study_hours', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='本日の学習時間')),
                ('stuck_content', models.TextField(blank=True, max_length=500, verbose_name='詰まった内容')),
                ('feedback_requested', models.BooleanField(default=False, verbose_name='フィードバック希望')),
                ('problem_detail', models.TextField(blank=True, max_length=300, verbose_name='具体的な問題内容')),
                ('tried_solutions', models.TextField(blank=True, max_length=300, verbose_name='試したこと')),
                ('reflection', models.TextField(max_length=300, verbose_name='今日の振り返り')),
                ('next_goal', models.TextField(max_length=200, verbose_name='明日の目標')),
                ('planned_hours', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='予定学習時間')),
                ('action_plan', models.TextField(max_length=200, verbose_name='具体的な行動計画')),
                ('need_review', models.BooleanField(default=False, verbose_name='復習必要')),
                ('have_question', models.BooleanField(default=False, verbose_name='質問予定')),
                ('next_phase_ready', models.BooleanField(default=False, verbose_name='次Phase進行予定')),
                ('current_grade', models.CharField(choices=[('S', 'S級 (120日以内)'), ('A', 'A級 (150日以内)'), ('B', 'B級 (180日以内)'), ('C', 'C級 (210日以内)'), ('D', 'D級 (210日超過)')], max_length=1, verbose_name='現在の階級')),
                ('days_elapsed', models.IntegerField(verbose_name='経過日数')),
                ('delay_days', models.IntegerField(default=0, verbose_name='遅れ日数')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='progress.curriculumitem', verbose_name='現在の項目')),
                ('next_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_progress', to='progress.curriculumitem', verbose_name='予定項目')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_progress', to=settings.AUTH_USER_MODEL)),
                ('current_phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='progress.phase', verbose_name='現在のPhase')),
                ('next_phase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_progress', to='progress.phase', verbose_name='予定Phase')),
            ],
            options={
                'verbose_name': '日次進捗記録',
                'verbose_name_plural': '日次進捗記録',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
